@mixin clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin horizontal-vertical-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// MEDIA QUERY MANAGER
/*
0 - 600px:          Phone
600 - 900px:        Tablet portrait
900 - 1200px:       Tablet landscape
[1200 - 1800px]:    Desktop   [where our normal styles apply]
1800px + :          Big desktop
*/

// You could do this:
// @content: content passed to the mixin when it is @included elsewhere in the code: you can pass a block of code to the mixin,
// eg. @include respond-phone { font-size: 50%; } 
@mixin respond-phone {
  @media (max-width: 600px) { @content; }
}

// BETTER WAY:
/*
$breakpoint argument choices:
- phone
- tab-port
- tab-land
- big-desktop

ORDER: Base + typography > grneral layout + grid > page layout > components
*/

// Usage: pass the $breakpoint argument as parameter to the mixin, eg.
// @include respond(phone) { font-size: 50%; }

@mixin respond($breakpoint) {
  @if $breakpoint == phone {
    @media only screen and (max-width: 37.5em) { @content; } // 600px / 16px = 37.5em
  }
  @if $breakpoint == tab-port {
    @media only screen and (max-width: 56.25em) { @content; }
  }
  @if $breakpoint == tab-land {
    @media only screen and (max-width: 75em) { @content; }
  }
  @if $breakpoint == big-desktop {
    @media only screen and (min-width: 112.5em) { @content; }
  }
}

// RELATIVE BREAKPOINTS
// breakpoints should be relative (if user changes font-size, the breakpoint's no longer apply properly)
// font-size in media query for rem & em is always browser's default font-size, 1em = 16px. Here it's better to use ems than rems, rems have been found to break in some browsers. Ems best option for media queries